name: build-and-release
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: windows
            add_data: "langs;langs"
            ext: ".exe"
          - os: ubuntu-latest
            target: linux
            add_data: "langs:langs"
            ext: ".linux"
          - os: macos-latest
            target: macos
            add_data: "langs:langs"
            ext: ".macos"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --prefer-binary -r requirements.txt pyinstaller==6.4 pyinstaller-hooks-contrib==2024.6

      - name: Build client
        working-directory: client
        run: |
          pyinstaller --noconfirm --onefile --noconsole --name EncryptedClient${{ matrix.ext }} --add-data "${{ matrix.add_data }}" app.py
        shell: bash

      - name: Build server
        working-directory: server
        run: |
          pyinstaller --noconfirm --onefile --name EncryptedServer${{ matrix.ext }} app.py
        shell: bash

      - name: Collect artifacts
        shell: bash
        run: |
          mkdir -p dist_upload
          # Copier et renommer avec suffixe OS pour éviter doublons
          cp client/dist/EncryptedClient${{ matrix.ext }} dist_upload/EncryptedClient-${{ matrix.target }}${{ matrix.ext }}
          cp server/dist/EncryptedServer${{ matrix.ext }} dist_upload/EncryptedServer-${{ matrix.target }}${{ matrix.ext }}
          # Générer la somme de contrôle dans dist_upload
          (cd dist_upload && shasum -a 256 * > SHA256SUMS.txt 2>/dev/null || sha256sum * > SHA256SUMS.txt)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: dist_upload/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist_all

      - name: Flatten files and merge SHA256SUMS
        run: |
          cd dist_all
          mkdir flat
          find . -type f \( -name "*.exe" -o -name "*.macos" -o -name "*.linux" \) -exec cp {} flat/ \;
          find . -name "SHA256SUMS.txt" -exec cat {} + > flat/SHA256SUMS_merged.txt
          sort -u flat/SHA256SUMS_merged.txt > flat/SHA256SUMS.txt
          rm flat/SHA256SUMS_merged.txt

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist_all/flat/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}